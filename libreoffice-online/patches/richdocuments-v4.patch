diff --git a/appinfo/info.xml b/appinfo/info.xml
index 59b4285e..3c967b8d 100644
--- a/appinfo/info.xml
+++ b/appinfo/info.xml
@@ -31,11 +31,7 @@ You can also edit your documents off-line with the Collabora Office app from the
 	<dependencies>
 		<nextcloud min-version="21" max-version="23" />
 	</dependencies>
-	<background-jobs>
-		<job>OCA\Richdocuments\Backgroundjobs\ObtainCapabilities</job>
-	</background-jobs>
 	<commands>
-		<command>OCA\Richdocuments\Command\ActivateConfig</command>
 		<command>OCA\Richdocuments\Command\ConvertToBigInt</command>
 		<command>OCA\Richdocuments\Command\UpdateEmptyTemplates</command>
 	</commands>
diff --git a/lib/AppInfo/Application.php b/lib/AppInfo/Application.php
index 5701d50e..20668b78 100644
--- a/lib/AppInfo/Application.php
+++ b/lib/AppInfo/Application.php
@@ -36,7 +36,6 @@ use OCA\Richdocuments\Preview\MSWord;
 use OCA\Richdocuments\Preview\OOXML;
 use OCA\Richdocuments\Preview\OpenDocument;
 use OCA\Richdocuments\Preview\Pdf;
-use OCA\Richdocuments\Service\CapabilitiesService;
 use OCA\Richdocuments\Service\FederationService;
 use OCA\Richdocuments\Template\CollaboraTemplateProvider;
 use OCA\Richdocuments\WOPI\DiscoveryManager;
@@ -285,11 +284,7 @@ class Application extends App implements IBootstrap {
 			$appConfig->setAppValue('disable_certificate_verification', 'yes');
 
 			$discoveryManager = $this->getContainer()->query(DiscoveryManager::class);
-			$capabilitiesService = $this->getContainer()->query(CapabilitiesService::class);
-
 			$discoveryManager->refetch();
-			$capabilitiesService->clear();
-			$capabilitiesService->refetch();
 		}
 	}
 
diff --git a/lib/Capabilities.php b/lib/Capabilities.php
index 3cd1b8c5..dea03953 100644
--- a/lib/Capabilities.php
+++ b/lib/Capabilities.php
@@ -23,7 +23,6 @@
 
 namespace OCA\Richdocuments;
 
-use OCA\Richdocuments\Service\CapabilitiesService;
 use OCP\Capabilities\ICapability;
 use OCP\IL10N;
 
@@ -75,42 +74,34 @@ class Capabilities implements ICapability {
 	private $l10n;
 	/** @var AppConfig */
 	private $config;
-	/** @var CapabilitiesService */
-	private $capabilitiesService;
 
 	private $capabilities = null;
 
-	public function __construct(IL10N $l10n, AppConfig $config, CapabilitiesService $capabilitiesService) {
+	public function __construct(IL10N $l10n, AppConfig $config) {
 		$this->l10n = $l10n;
 		$this->config = $config;
-		$this->capabilitiesService = $capabilitiesService;
 	}
 
 	public function getCapabilities() {
-		if (!$this->capabilities) {
-			$collaboraCapabilities = $this->capabilitiesService->getCapabilities();
-			$this->capabilities = [
-				'richdocuments' => [
-					'version' => \OC::$server->getAppManager()->getAppVersion('richdocuments'),
-					'mimetypes' => self::MIMETYPES,
-					'mimetypesNoDefaultOpen' => self::MIMETYPES_OPTIONAL,
-					'collabora' => $collaboraCapabilities,
-					'direct_editing' => isset($collaboraCapabilities['hasMobileSupport']) ?: false,
-					'templates' => isset($collaboraCapabilities['hasTemplateSaveAs']) || isset($collaboraCapabilities['hasTemplateSource']) ?: false,
-					'productName' => isset($collaboraCapabilities['productName']) ? $collaboraCapabilities['productName'] : $this->l10n->t('Collabora Online'),
-					'config' => [
-						'wopi_url' => $this->config->getAppValue('wopi_url'),
-						'public_wopi_url' => $this->config->getAppValue('public_wopi_url'),
-						'disable_certificate_verification' => $this->config->getAppValue('disable_certificate_verification'),
-						'edit_groups' => $this->config->getAppValue('edit_groups'),
-						'use_groups' => $this->config->getAppValue('use_groups'),
-						'doc_format' => $this->config->getAppValue('doc_format'),
-						'timeout' => $this->config->getAppValue('timeout'),
-
-					]
-				],
-			];
-		}
-		return $this->capabilities;
+		return [
+			'richdocuments' => [
+				'version' => \OC::$server->getAppManager()->getAppVersion('richdocuments'),
+				'mimetypes' => self::MIMETYPES,
+				'mimetypesNoDefaultOpen' => self::MIMETYPES_OPTIONAL,
+				'collabora' => ['productName' => 'LibreOffice Online'],
+				'direct_editing' => false,
+				'templates' => false,
+				'productName' => 'LibreOffice Online',
+				'config' => [
+					'wopi_url' => $this->config->getAppValue('wopi_url'),
+					'public_wopi_url' => $this->config->getAppValue('public_wopi_url'),
+					'disable_certificate_verification' => $this->config->getAppValue('disable_certificate_verification'),
+					'edit_groups' => $this->config->getAppValue('edit_groups'),
+					'use_groups' => $this->config->getAppValue('use_groups'),
+					'doc_format' => $this->config->getAppValue('doc_format'),
+					'timeout' => $this->config->getAppValue('timeout'),
+				]
+			],
+		];
 	}
 }
diff --git a/lib/Controller/SettingsController.php b/lib/Controller/SettingsController.php
index bec87a4b..ebd0061d 100644
--- a/lib/Controller/SettingsController.php
+++ b/lib/Controller/SettingsController.php
@@ -11,10 +11,7 @@
 
 namespace OCA\Richdocuments\Controller;
 
-use OCA\Richdocuments\Service\CapabilitiesService;
 use OCA\Richdocuments\Service\DemoService;
-use OCA\Richdocuments\WOPI\DiscoveryManager;
-use OCA\Richdocuments\WOPI\Parser;
 use \OCP\AppFramework\Controller;
 use OCP\AppFramework\Http;
 use OCP\AppFramework\Http\DataResponse;
@@ -33,14 +30,8 @@ class SettingsController extends Controller{
 	private $appConfig;
 	/** @var IConfig */
 	private $config;
-	/** @var DiscoveryManager  */
-	private $discoveryManager;
-	/** @var Parser */
-	private $wopiParser;
 	/** @var string */
 	private $userId;
-	/** @var CapabilitiesService */
-	private $capabilitiesService;
 	/** @var DemoService */
 	private $demoService;
 
@@ -50,30 +41,21 @@ class SettingsController extends Controller{
 	 * @param IL10N $l10n
 	 * @param AppConfig $appConfig
 	 * @param IConfig $config
-	 * @param DiscoveryManager $discoveryManager
-	 * @param Parser $wopiParser
 	 * @param string $userId
-	 * @param CapabilitiesService $capabilitiesService
 	 */
 	public function __construct($appName,
 		IRequest $request,
 		IL10N $l10n,
 		AppConfig $appConfig,
 		IConfig $config,
-		DiscoveryManager $discoveryManager,
-		Parser $wopiParser,
 		$userId,
-		CapabilitiesService $capabilitiesService,
 		DemoService $demoService
 	) {
 		parent::__construct($appName, $request);
 		$this->l10n = $l10n;
 		$this->appConfig = $appConfig;
 		$this->config = $config;
-		$this->discoveryManager = $discoveryManager;
-		$this->wopiParser = $wopiParser;
 		$this->userId = $userId;
-		$this->capabilitiesService = $capabilitiesService;
 		$this->demoService = $demoService;
 	}
 
@@ -83,15 +65,6 @@ class SettingsController extends Controller{
 	 * @throws \Exception
 	 */
 	public function checkSettings() {
-		try {
-			$response = $this->discoveryManager->fetchFromRemote();
-		} catch (\Exception $e) {
-			return new DataResponse([
-				'status' => $e->getCode(),
-				'message' => $e->getMessage()
-			], Http::STATUS_INTERNAL_SERVER_ERROR);
-		}
-
 		return new DataResponse();
 	}
 
@@ -175,38 +148,6 @@ class SettingsController extends Controller{
 			$this->appConfig->setAppValue('canonical_webroot', $canonical_webroot);
 		}
 
-		$this->discoveryManager->refetch();
-		$this->capabilitiesService->clear();
-		try {
-			$capaUrlSrc = $this->wopiParser->getUrlSrc('Capabilities');
-			if (is_array($capaUrlSrc) && $capaUrlSrc['action'] === 'getinfo') {
-				$public_wopi_url = str_replace('/hosting/capabilities', '', $capaUrlSrc['urlsrc']);
-				if ($public_wopi_url !== null) {
-					$this->appConfig->setAppValue('public_wopi_url', $public_wopi_url);
-					$colon = strpos($public_wopi_url, ':', 0);
-					if ($this->request->getServerProtocol() !== substr($public_wopi_url, 0, $colon)){
-						$message = $this->l10n->t('Saved with error: Collabora Online should use the same protocol as the server installation.');
-					}
-				}
-			}
-		} catch (\Exception $e){
-			if ($wopi_url !== null) {
-				return new JSONResponse([
-					'status' => 'error',
-					'data' => ['message' => 'Failed to connect to the remote server']
-				], 500);
-			}
-		}
-
-		$this->capabilitiesService->clear();
-		$this->capabilitiesService->refetch();
-		if ($this->capabilitiesService->getCapabilities() === []) {
-			return new JSONResponse([
-				'status' => 'error',
-				'data' => ['message' => 'Failed to connect to the remote server', 'hint' => 'missing_capabilities']
-			], 500);
-		}
-
 		$response = [
 			'status' => 'success',
 			'data' => ['message' => $message]
diff --git a/lib/TokenManager.php b/lib/TokenManager.php
index 8c563f73..8f80913d 100644
--- a/lib/TokenManager.php
+++ b/lib/TokenManager.php
@@ -24,8 +24,6 @@ namespace OCA\Richdocuments;
 use OCA\Richdocuments\Db\Direct;
 use OCA\Richdocuments\Db\WopiMapper;
 use OCA\Richdocuments\Db\Wopi;
-use OCA\Richdocuments\Service\CapabilitiesService;
-use OCA\Richdocuments\WOPI\Parser;
 use OCP\Constants;
 use OCP\Files\File;
 use OCP\Files\ForbiddenException;
@@ -47,8 +45,6 @@ class TokenManager {
 	private $shareManager;
 	/** @var IURLGenerator */
 	private $urlGenerator;
-	/** @var Parser */
-	private $wopiParser;
 	/** @var AppConfig */
 	private $appConfig;
 	/** @var string */
@@ -61,17 +57,15 @@ class TokenManager {
 	private $userManager;
 	/** @var IGroupManager */
 	private $groupManager;
-	/** @var CapabilitiesService */
-	private $capabilitiesService;
 	/** @var Helper */
 	private $helper;
 
+	const LOOL_MIME_TYPES = @LOOL_MIME_TYPES_ARRAY@;
+
 	public function __construct(
 		IRootFolder $rootFolder,
 		IManager $shareManager,
 		IURLGenerator $urlGenerator,
-		Parser $wopiParser,
-		CapabilitiesService $capabilitiesService,
 		AppConfig $appConfig,
 		$UserId,
 		WopiMapper $wopiMapper,
@@ -83,8 +77,6 @@ class TokenManager {
 		$this->rootFolder = $rootFolder;
 		$this->shareManager = $shareManager;
 		$this->urlGenerator = $urlGenerator;
-		$this->wopiParser = $wopiParser;
-		$this->capabilitiesService = $capabilitiesService;
 		$this->appConfig = $appConfig;
 		$this->trans = $trans;
 		$this->userId = $UserId;
@@ -210,11 +202,10 @@ class TokenManager {
 		}
 		$wopi = $this->wopiMapper->generateFileToken($fileId, $owneruid, $editoruid, $version, $updatable, $serverHost, $guestName, 0, $hideDownload, $direct, 0, $shareToken);
 
-		return [
-			$this->wopiParser->getUrlSrc($file->getMimeType())['urlsrc'], // url src might not be found ehre
-			$wopi->getToken(),
-			$wopi
-		];
+		if (in_array($file->getMimeType(), self::LOOL_MIME_TYPES))
+			return ['@LOOL_LEAFLET_URL@', $wopi->getToken(), $wopi];
+		else
+			throw new \Exception('Could not find urlsrc in WOPI');
 	}
 
 	/**
@@ -282,17 +273,13 @@ class TokenManager {
 
 		$serverHost = $this->urlGenerator->getAbsoluteURL('/');
 
-		if ($this->capabilitiesService->hasTemplateSource()) {
-			$wopi = $this->wopiMapper->generateFileToken($targetFile->getId(), $owneruid, $editoruid, 0, $updatable, $serverHost, null, 0, false, $direct, $templateFile->getId());
-		} else {
-			// Legacy way of creating new documents from a template
-			$wopi = $this->wopiMapper->generateFileToken($templateFile->getId(), $owneruid, $editoruid, 0, $updatable, $serverHost, null, $targetFile->getId(), $direct);
-		}
+		// Legacy way of creating new documents from a template
+		$wopi = $this->wopiMapper->generateFileToken($templateFile->getId(), $owneruid, $editoruid, 0, $updatable, $serverHost, null, $targetFile->getId(), $direct);
 
-		return [
-			$this->wopiParser->getUrlSrc($templateFile->getMimeType())['urlsrc'],
-			$wopi
-		];
+		if (in_array($templateFile->getMimeType(), self::LOOL_MIME_TYPES))
+			return ['@LOOL_LEAFLET_URL@', $wopi];
+		else
+			throw new \Exception('Could not find urlsrc in WOPI');
 	}
 
 	public function newInitiatorToken($sourceServer, Node $node = null, $shareToken = null, bool $direct = false, $userId = null): Wopi {
